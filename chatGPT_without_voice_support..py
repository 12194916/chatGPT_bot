# -*- coding: utf-8 -*-
"""chatGPT_bot.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17cqQP_JdjQ8bmNgzchXs8Sdyv-wHRGd4
"""

import openai
import telebot
import time
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton

openai.api_key = '...'
messages = [
    {"role": "system", "content": "You are a kind helpful assistant."},
]


TOKEN = '.....'
bot = telebot.TeleBot(TOKEN, parse_mode=None)
keyboard = InlineKeyboardMarkup()
button = InlineKeyboardButton(text="clear the conversation </empty>", callback_data="clear",width=2, height=1)
keyboard.add(button)

MAX_INPUT_LENGTH = 2048  # maximum input length for the GPT-3 model

@bot.message_handler(commands=['start'])
def send_welcome(message):
    javob = "Hello I am a virtual asistent!"
    javob += "\nFor now, the API is not responding, please try later."
    bot.reply_to(message, javob)

@bot.message_handler(commands=['help'])
def send_welcome(message):
    javob ='''-I am  AI language model, I don't have a physical self or a personal
life like humans do. However, I possess the ability to comprehend and process natural
language and generate responses that aim to help and assist users in various tasks
and inquiries. I was designed to utilize sophisticated algorithms and machine  learning
techniques to provide high-quality responses that simulate human-like interactions.
So, you can think of me as a virtual assistant or a digital aide thatis always here to
assist you with anything you need.

-Officially, I am not available in some countries. But as a telegram bot, I can reach you all.'''
    bot.reply_to(message, javob)

@bot.callback_query_handler(func=lambda call: call.data == "clear")
def clear(call):
    global messages
    messages = []
    response = "Message history cleared. You may start new conversation."
    bot.send_message(call.message.chat.id, response)

@bot.message_handler(commands=['empty'])
def delete(message):
    global messages
    messages = []
    javob = "Message history cleared. You may start new conversation."
    bot.reply_to(message, javob)


@bot.message_handler(func=lambda m: True)
def echo_all(message):
    text = message.text
    if len(text) > MAX_INPUT_LENGTH:
        messages.clear()
        bot.reply_to(message, "The conversation gets long, let's start new.")
        return

    if message:
        messages.append(
            {"role": "user", "content": text},
        )
        bot.send_chat_action(message.chat.id, 'typing')
        chat = openai.ChatCompletion.create(
            model="text-davinci-002", messages=messages
        )

        bot.send_chat_action(message.chat.id, 'typing')
        time.sleep(1)
        javob = chat.choices[0].text
        messages.append({"role": "assistant", "content": javob})
        bot.reply_to(message, javob, reply_markup=keyboard)

bot.infinity_polling()